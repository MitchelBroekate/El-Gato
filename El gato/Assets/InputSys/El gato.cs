//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSys/El gato.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Elgato: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Elgato()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""El gato"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""7496ae2f-a4f0-47b7-a828-6db09b737f1a"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""254ffea9-9472-41cb-b2b3-25b9d055c052"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""67d6a53d-561a-4c29-979f-cc6309228e6b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCam"",
                    ""type"": ""Button"",
                    ""id"": ""dfa0d406-ae60-4813-b5d1-2b2d37e5738c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WaveButton"",
                    ""type"": ""Button"",
                    ""id"": ""7f03cfaf-a200-44fc-a357-7cb6dc9ca54b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevMoney"",
                    ""type"": ""Button"",
                    ""id"": ""6e70092e-4645-4653-b014-72d3340c4c77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevWave"",
                    ""type"": ""Button"",
                    ""id"": ""73b9e3c8-4a89-4558-ab6d-1674b1aa642f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireFPS"",
                    ""type"": ""Button"",
                    ""id"": ""93dc7408-7a1c-42ed-b815-31c872c89a3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CherryActive"",
                    ""type"": ""Button"",
                    ""id"": ""12df5d0a-cc18-4363-ac94-03aaad8b5bcc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PumpkinActive"",
                    ""type"": ""Button"",
                    ""id"": ""54189342-679e-4b64-81b9-914183d645af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevKillSelf"",
                    ""type"": ""Button"",
                    ""id"": ""38254762-b648-4f64-8d9c-c3e20c519e98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevKillEnemy"",
                    ""type"": ""Button"",
                    ""id"": ""552f37ef-1a2c-4d52-9ba7-6d3e13c23e82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""00ca640b-d935-4593-8157-c05846ea39b3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2062cb9-1b15-46a2-838c-2f8d72a0bdd9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""320bffee-a40b-4347-ac70-c210eb8bc73a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2581a9b-1d11-4566-b27d-b92aff5fabbc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcfe95b8-67b9-4526-84b5-5d0bc98d6400"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""05f6913d-c316-48b2-a6bb-e225f14c7960"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b736ba5-4adf-4418-b88d-428673b9efe0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b626a90f-084f-42f3-afd1-d464f7531c18"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaveButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4340bc1-0aa4-48a4-bcca-0251c1d00d84"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevMoney"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52e5c38a-c9be-457d-a40d-69363a627d9e"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevWave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b26e20c1-754c-43ad-a664-7f4bf9edcc5d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireFPS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d65fa9e-0bcc-4e40-b43d-1781e5d38952"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CherryActive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef28567b-f4a1-4226-9b40-a7592a2b3add"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PumpkinActive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d01333d-1be9-4176-814a-060177a2e69a"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevKillSelf"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efb1e2f4-9bb6-4fcf-b0cb-d34e168179b2"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevKillEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Fire = m_Player.FindAction("Fire", throwIfNotFound: true);
        m_Player_SwitchCam = m_Player.FindAction("SwitchCam", throwIfNotFound: true);
        m_Player_WaveButton = m_Player.FindAction("WaveButton", throwIfNotFound: true);
        m_Player_DevMoney = m_Player.FindAction("DevMoney", throwIfNotFound: true);
        m_Player_DevWave = m_Player.FindAction("DevWave", throwIfNotFound: true);
        m_Player_FireFPS = m_Player.FindAction("FireFPS", throwIfNotFound: true);
        m_Player_CherryActive = m_Player.FindAction("CherryActive", throwIfNotFound: true);
        m_Player_PumpkinActive = m_Player.FindAction("PumpkinActive", throwIfNotFound: true);
        m_Player_DevKillSelf = m_Player.FindAction("DevKillSelf", throwIfNotFound: true);
        m_Player_DevKillEnemy = m_Player.FindAction("DevKillEnemy", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Fire;
    private readonly InputAction m_Player_SwitchCam;
    private readonly InputAction m_Player_WaveButton;
    private readonly InputAction m_Player_DevMoney;
    private readonly InputAction m_Player_DevWave;
    private readonly InputAction m_Player_FireFPS;
    private readonly InputAction m_Player_CherryActive;
    private readonly InputAction m_Player_PumpkinActive;
    private readonly InputAction m_Player_DevKillSelf;
    private readonly InputAction m_Player_DevKillEnemy;
    public struct PlayerActions
    {
        private @Elgato m_Wrapper;
        public PlayerActions(@Elgato wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Fire => m_Wrapper.m_Player_Fire;
        public InputAction @SwitchCam => m_Wrapper.m_Player_SwitchCam;
        public InputAction @WaveButton => m_Wrapper.m_Player_WaveButton;
        public InputAction @DevMoney => m_Wrapper.m_Player_DevMoney;
        public InputAction @DevWave => m_Wrapper.m_Player_DevWave;
        public InputAction @FireFPS => m_Wrapper.m_Player_FireFPS;
        public InputAction @CherryActive => m_Wrapper.m_Player_CherryActive;
        public InputAction @PumpkinActive => m_Wrapper.m_Player_PumpkinActive;
        public InputAction @DevKillSelf => m_Wrapper.m_Player_DevKillSelf;
        public InputAction @DevKillEnemy => m_Wrapper.m_Player_DevKillEnemy;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @SwitchCam.started += instance.OnSwitchCam;
            @SwitchCam.performed += instance.OnSwitchCam;
            @SwitchCam.canceled += instance.OnSwitchCam;
            @WaveButton.started += instance.OnWaveButton;
            @WaveButton.performed += instance.OnWaveButton;
            @WaveButton.canceled += instance.OnWaveButton;
            @DevMoney.started += instance.OnDevMoney;
            @DevMoney.performed += instance.OnDevMoney;
            @DevMoney.canceled += instance.OnDevMoney;
            @DevWave.started += instance.OnDevWave;
            @DevWave.performed += instance.OnDevWave;
            @DevWave.canceled += instance.OnDevWave;
            @FireFPS.started += instance.OnFireFPS;
            @FireFPS.performed += instance.OnFireFPS;
            @FireFPS.canceled += instance.OnFireFPS;
            @CherryActive.started += instance.OnCherryActive;
            @CherryActive.performed += instance.OnCherryActive;
            @CherryActive.canceled += instance.OnCherryActive;
            @PumpkinActive.started += instance.OnPumpkinActive;
            @PumpkinActive.performed += instance.OnPumpkinActive;
            @PumpkinActive.canceled += instance.OnPumpkinActive;
            @DevKillSelf.started += instance.OnDevKillSelf;
            @DevKillSelf.performed += instance.OnDevKillSelf;
            @DevKillSelf.canceled += instance.OnDevKillSelf;
            @DevKillEnemy.started += instance.OnDevKillEnemy;
            @DevKillEnemy.performed += instance.OnDevKillEnemy;
            @DevKillEnemy.canceled += instance.OnDevKillEnemy;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @SwitchCam.started -= instance.OnSwitchCam;
            @SwitchCam.performed -= instance.OnSwitchCam;
            @SwitchCam.canceled -= instance.OnSwitchCam;
            @WaveButton.started -= instance.OnWaveButton;
            @WaveButton.performed -= instance.OnWaveButton;
            @WaveButton.canceled -= instance.OnWaveButton;
            @DevMoney.started -= instance.OnDevMoney;
            @DevMoney.performed -= instance.OnDevMoney;
            @DevMoney.canceled -= instance.OnDevMoney;
            @DevWave.started -= instance.OnDevWave;
            @DevWave.performed -= instance.OnDevWave;
            @DevWave.canceled -= instance.OnDevWave;
            @FireFPS.started -= instance.OnFireFPS;
            @FireFPS.performed -= instance.OnFireFPS;
            @FireFPS.canceled -= instance.OnFireFPS;
            @CherryActive.started -= instance.OnCherryActive;
            @CherryActive.performed -= instance.OnCherryActive;
            @CherryActive.canceled -= instance.OnCherryActive;
            @PumpkinActive.started -= instance.OnPumpkinActive;
            @PumpkinActive.performed -= instance.OnPumpkinActive;
            @PumpkinActive.canceled -= instance.OnPumpkinActive;
            @DevKillSelf.started -= instance.OnDevKillSelf;
            @DevKillSelf.performed -= instance.OnDevKillSelf;
            @DevKillSelf.canceled -= instance.OnDevKillSelf;
            @DevKillEnemy.started -= instance.OnDevKillEnemy;
            @DevKillEnemy.performed -= instance.OnDevKillEnemy;
            @DevKillEnemy.canceled -= instance.OnDevKillEnemy;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnSwitchCam(InputAction.CallbackContext context);
        void OnWaveButton(InputAction.CallbackContext context);
        void OnDevMoney(InputAction.CallbackContext context);
        void OnDevWave(InputAction.CallbackContext context);
        void OnFireFPS(InputAction.CallbackContext context);
        void OnCherryActive(InputAction.CallbackContext context);
        void OnPumpkinActive(InputAction.CallbackContext context);
        void OnDevKillSelf(InputAction.CallbackContext context);
        void OnDevKillEnemy(InputAction.CallbackContext context);
    }
}
